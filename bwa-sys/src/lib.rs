/* automatically generated by rust-bindgen 0.70.1 */

pub const BWA_IDX_ALL: u32 = 7;
pub const BWTALGO_BWTSW: u32 = 2;
pub const BWTALGO_IS: u32 = 3;
pub const MEM_F_PE: u32 = 2;
pub const MEM_F_NOPAIRING: u32 = 4;
pub const MEM_F_ALL: u32 = 8;
pub const MEM_F_NO_MULTI: u32 = 16;
pub const MEM_F_NO_RESCUE: u32 = 32;
pub const MEM_F_REF_HDR: u32 = 256;
pub const MEM_F_SOFTCLIP: u32 = 512;
pub const MEM_F_SMARTPE: u32 = 1024;
pub const MEM_F_PRIMARY5: u32 = 2048;
pub const MEM_F_KEEP_SUPP_MAPQ: u32 = 4096;
pub const MEM_F_XB: u32 = 8192;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type FILE = _IO_FILE;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_marker {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_codecvt {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_wide_data {
    _unused: [u8; 0],
}
pub type _IO_lock_t = ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_FILE {
    pub _flags: ::std::os::raw::c_int,
    pub _IO_read_ptr: *mut ::std::os::raw::c_char,
    pub _IO_read_end: *mut ::std::os::raw::c_char,
    pub _IO_read_base: *mut ::std::os::raw::c_char,
    pub _IO_write_base: *mut ::std::os::raw::c_char,
    pub _IO_write_ptr: *mut ::std::os::raw::c_char,
    pub _IO_write_end: *mut ::std::os::raw::c_char,
    pub _IO_buf_base: *mut ::std::os::raw::c_char,
    pub _IO_buf_end: *mut ::std::os::raw::c_char,
    pub _IO_save_base: *mut ::std::os::raw::c_char,
    pub _IO_backup_base: *mut ::std::os::raw::c_char,
    pub _IO_save_end: *mut ::std::os::raw::c_char,
    pub _markers: *mut _IO_marker,
    pub _chain: *mut _IO_FILE,
    pub _fileno: ::std::os::raw::c_int,
    pub _flags2: ::std::os::raw::c_int,
    pub _old_offset: __off_t,
    pub _cur_column: ::std::os::raw::c_ushort,
    pub _vtable_offset: ::std::os::raw::c_schar,
    pub _shortbuf: [::std::os::raw::c_char; 1usize],
    pub _lock: *mut _IO_lock_t,
    pub _offset: __off64_t,
    pub _codecvt: *mut _IO_codecvt,
    pub _wide_data: *mut _IO_wide_data,
    pub _freeres_list: *mut _IO_FILE,
    pub _freeres_buf: *mut ::std::os::raw::c_void,
    pub __pad5: usize,
    pub _mode: ::std::os::raw::c_int,
    pub _unused2: [::std::os::raw::c_char; 20usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _IO_FILE"][::std::mem::size_of::<_IO_FILE>() - 216usize];
    ["Alignment of _IO_FILE"][::std::mem::align_of::<_IO_FILE>() - 8usize];
    ["Offset of field: _IO_FILE::_flags"][::std::mem::offset_of!(_IO_FILE, _flags) - 0usize];
    ["Offset of field: _IO_FILE::_IO_read_ptr"]
        [::std::mem::offset_of!(_IO_FILE, _IO_read_ptr) - 8usize];
    ["Offset of field: _IO_FILE::_IO_read_end"]
        [::std::mem::offset_of!(_IO_FILE, _IO_read_end) - 16usize];
    ["Offset of field: _IO_FILE::_IO_read_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_read_base) - 24usize];
    ["Offset of field: _IO_FILE::_IO_write_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_write_base) - 32usize];
    ["Offset of field: _IO_FILE::_IO_write_ptr"]
        [::std::mem::offset_of!(_IO_FILE, _IO_write_ptr) - 40usize];
    ["Offset of field: _IO_FILE::_IO_write_end"]
        [::std::mem::offset_of!(_IO_FILE, _IO_write_end) - 48usize];
    ["Offset of field: _IO_FILE::_IO_buf_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_buf_base) - 56usize];
    ["Offset of field: _IO_FILE::_IO_buf_end"]
        [::std::mem::offset_of!(_IO_FILE, _IO_buf_end) - 64usize];
    ["Offset of field: _IO_FILE::_IO_save_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_save_base) - 72usize];
    ["Offset of field: _IO_FILE::_IO_backup_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_backup_base) - 80usize];
    ["Offset of field: _IO_FILE::_IO_save_end"]
        [::std::mem::offset_of!(_IO_FILE, _IO_save_end) - 88usize];
    ["Offset of field: _IO_FILE::_markers"][::std::mem::offset_of!(_IO_FILE, _markers) - 96usize];
    ["Offset of field: _IO_FILE::_chain"][::std::mem::offset_of!(_IO_FILE, _chain) - 104usize];
    ["Offset of field: _IO_FILE::_fileno"][::std::mem::offset_of!(_IO_FILE, _fileno) - 112usize];
    ["Offset of field: _IO_FILE::_flags2"][::std::mem::offset_of!(_IO_FILE, _flags2) - 116usize];
    ["Offset of field: _IO_FILE::_old_offset"]
        [::std::mem::offset_of!(_IO_FILE, _old_offset) - 120usize];
    ["Offset of field: _IO_FILE::_cur_column"]
        [::std::mem::offset_of!(_IO_FILE, _cur_column) - 128usize];
    ["Offset of field: _IO_FILE::_vtable_offset"]
        [::std::mem::offset_of!(_IO_FILE, _vtable_offset) - 130usize];
    ["Offset of field: _IO_FILE::_shortbuf"]
        [::std::mem::offset_of!(_IO_FILE, _shortbuf) - 131usize];
    ["Offset of field: _IO_FILE::_lock"][::std::mem::offset_of!(_IO_FILE, _lock) - 136usize];
    ["Offset of field: _IO_FILE::_offset"][::std::mem::offset_of!(_IO_FILE, _offset) - 144usize];
    ["Offset of field: _IO_FILE::_codecvt"][::std::mem::offset_of!(_IO_FILE, _codecvt) - 152usize];
    ["Offset of field: _IO_FILE::_wide_data"]
        [::std::mem::offset_of!(_IO_FILE, _wide_data) - 160usize];
    ["Offset of field: _IO_FILE::_freeres_list"]
        [::std::mem::offset_of!(_IO_FILE, _freeres_list) - 168usize];
    ["Offset of field: _IO_FILE::_freeres_buf"]
        [::std::mem::offset_of!(_IO_FILE, _freeres_buf) - 176usize];
    ["Offset of field: _IO_FILE::__pad5"][::std::mem::offset_of!(_IO_FILE, __pad5) - 184usize];
    ["Offset of field: _IO_FILE::_mode"][::std::mem::offset_of!(_IO_FILE, _mode) - 192usize];
    ["Offset of field: _IO_FILE::_unused2"][::std::mem::offset_of!(_IO_FILE, _unused2) - 196usize];
};
pub type bwtint_t = u64;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bwt_t {
    pub primary: bwtint_t,
    pub L2: [bwtint_t; 5usize],
    pub seq_len: bwtint_t,
    pub bwt_size: bwtint_t,
    pub bwt: *mut u32,
    pub cnt_table: [u32; 256usize],
    pub sa_intv: ::std::os::raw::c_int,
    pub n_sa: bwtint_t,
    pub sa: *mut bwtint_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of bwt_t"][::std::mem::size_of::<bwt_t>() - 1120usize];
    ["Alignment of bwt_t"][::std::mem::align_of::<bwt_t>() - 8usize];
    ["Offset of field: bwt_t::primary"][::std::mem::offset_of!(bwt_t, primary) - 0usize];
    ["Offset of field: bwt_t::L2"][::std::mem::offset_of!(bwt_t, L2) - 8usize];
    ["Offset of field: bwt_t::seq_len"][::std::mem::offset_of!(bwt_t, seq_len) - 48usize];
    ["Offset of field: bwt_t::bwt_size"][::std::mem::offset_of!(bwt_t, bwt_size) - 56usize];
    ["Offset of field: bwt_t::bwt"][::std::mem::offset_of!(bwt_t, bwt) - 64usize];
    ["Offset of field: bwt_t::cnt_table"][::std::mem::offset_of!(bwt_t, cnt_table) - 72usize];
    ["Offset of field: bwt_t::sa_intv"][::std::mem::offset_of!(bwt_t, sa_intv) - 1096usize];
    ["Offset of field: bwt_t::n_sa"][::std::mem::offset_of!(bwt_t, n_sa) - 1104usize];
    ["Offset of field: bwt_t::sa"][::std::mem::offset_of!(bwt_t, sa) - 1112usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bwtintv_t {
    pub x: [bwtint_t; 3usize],
    pub info: bwtint_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of bwtintv_t"][::std::mem::size_of::<bwtintv_t>() - 32usize];
    ["Alignment of bwtintv_t"][::std::mem::align_of::<bwtintv_t>() - 8usize];
    ["Offset of field: bwtintv_t::x"][::std::mem::offset_of!(bwtintv_t, x) - 0usize];
    ["Offset of field: bwtintv_t::info"][::std::mem::offset_of!(bwtintv_t, info) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bwtintv_v {
    pub n: usize,
    pub m: usize,
    pub a: *mut bwtintv_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of bwtintv_v"][::std::mem::size_of::<bwtintv_v>() - 24usize];
    ["Alignment of bwtintv_v"][::std::mem::align_of::<bwtintv_v>() - 8usize];
    ["Offset of field: bwtintv_v::n"][::std::mem::offset_of!(bwtintv_v, n) - 0usize];
    ["Offset of field: bwtintv_v::m"][::std::mem::offset_of!(bwtintv_v, m) - 8usize];
    ["Offset of field: bwtintv_v::a"][::std::mem::offset_of!(bwtintv_v, a) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bntann1_t {
    pub offset: i64,
    pub len: i32,
    pub n_ambs: i32,
    pub gi: u32,
    pub is_alt: i32,
    pub name: *mut ::std::os::raw::c_char,
    pub anno: *mut ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of bntann1_t"][::std::mem::size_of::<bntann1_t>() - 40usize];
    ["Alignment of bntann1_t"][::std::mem::align_of::<bntann1_t>() - 8usize];
    ["Offset of field: bntann1_t::offset"][::std::mem::offset_of!(bntann1_t, offset) - 0usize];
    ["Offset of field: bntann1_t::len"][::std::mem::offset_of!(bntann1_t, len) - 8usize];
    ["Offset of field: bntann1_t::n_ambs"][::std::mem::offset_of!(bntann1_t, n_ambs) - 12usize];
    ["Offset of field: bntann1_t::gi"][::std::mem::offset_of!(bntann1_t, gi) - 16usize];
    ["Offset of field: bntann1_t::is_alt"][::std::mem::offset_of!(bntann1_t, is_alt) - 20usize];
    ["Offset of field: bntann1_t::name"][::std::mem::offset_of!(bntann1_t, name) - 24usize];
    ["Offset of field: bntann1_t::anno"][::std::mem::offset_of!(bntann1_t, anno) - 32usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bntamb1_t {
    pub offset: i64,
    pub len: i32,
    pub amb: ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of bntamb1_t"][::std::mem::size_of::<bntamb1_t>() - 16usize];
    ["Alignment of bntamb1_t"][::std::mem::align_of::<bntamb1_t>() - 8usize];
    ["Offset of field: bntamb1_t::offset"][::std::mem::offset_of!(bntamb1_t, offset) - 0usize];
    ["Offset of field: bntamb1_t::len"][::std::mem::offset_of!(bntamb1_t, len) - 8usize];
    ["Offset of field: bntamb1_t::amb"][::std::mem::offset_of!(bntamb1_t, amb) - 12usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bntseq_t {
    pub l_pac: i64,
    pub n_seqs: i32,
    pub seed: u32,
    pub anns: *mut bntann1_t,
    pub n_holes: i32,
    pub ambs: *mut bntamb1_t,
    pub fp_pac: *mut FILE,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of bntseq_t"][::std::mem::size_of::<bntseq_t>() - 48usize];
    ["Alignment of bntseq_t"][::std::mem::align_of::<bntseq_t>() - 8usize];
    ["Offset of field: bntseq_t::l_pac"][::std::mem::offset_of!(bntseq_t, l_pac) - 0usize];
    ["Offset of field: bntseq_t::n_seqs"][::std::mem::offset_of!(bntseq_t, n_seqs) - 8usize];
    ["Offset of field: bntseq_t::seed"][::std::mem::offset_of!(bntseq_t, seed) - 12usize];
    ["Offset of field: bntseq_t::anns"][::std::mem::offset_of!(bntseq_t, anns) - 16usize];
    ["Offset of field: bntseq_t::n_holes"][::std::mem::offset_of!(bntseq_t, n_holes) - 24usize];
    ["Offset of field: bntseq_t::ambs"][::std::mem::offset_of!(bntseq_t, ambs) - 32usize];
    ["Offset of field: bntseq_t::fp_pac"][::std::mem::offset_of!(bntseq_t, fp_pac) - 40usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bwaidx_t {
    pub bwt: *mut bwt_t,
    pub bns: *mut bntseq_t,
    pub pac: *mut u8,
    pub is_shm: ::std::os::raw::c_int,
    pub l_mem: i64,
    pub mem: *mut u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of bwaidx_t"][::std::mem::size_of::<bwaidx_t>() - 48usize];
    ["Alignment of bwaidx_t"][::std::mem::align_of::<bwaidx_t>() - 8usize];
    ["Offset of field: bwaidx_t::bwt"][::std::mem::offset_of!(bwaidx_t, bwt) - 0usize];
    ["Offset of field: bwaidx_t::bns"][::std::mem::offset_of!(bwaidx_t, bns) - 8usize];
    ["Offset of field: bwaidx_t::pac"][::std::mem::offset_of!(bwaidx_t, pac) - 16usize];
    ["Offset of field: bwaidx_t::is_shm"][::std::mem::offset_of!(bwaidx_t, is_shm) - 24usize];
    ["Offset of field: bwaidx_t::l_mem"][::std::mem::offset_of!(bwaidx_t, l_mem) - 32usize];
    ["Offset of field: bwaidx_t::mem"][::std::mem::offset_of!(bwaidx_t, mem) - 40usize];
};
extern "C" {
    pub fn bwa_fill_scmat(a: ::std::os::raw::c_int, b: ::std::os::raw::c_int, mat: *mut i8);
}
extern "C" {
    pub fn bwa_idx_build(
        fa: *const ::std::os::raw::c_char,
        prefix: *const ::std::os::raw::c_char,
        algo_type: ::std::os::raw::c_int,
        block_size: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn bwa_idx_load(
        hint: *const ::std::os::raw::c_char,
        which: ::std::os::raw::c_int,
    ) -> *mut bwaidx_t;
}
extern "C" {
    pub fn bwa_idx_destroy(idx: *mut bwaidx_t);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mem_opt_t {
    pub a: ::std::os::raw::c_int,
    pub b: ::std::os::raw::c_int,
    pub o_del: ::std::os::raw::c_int,
    pub e_del: ::std::os::raw::c_int,
    pub o_ins: ::std::os::raw::c_int,
    pub e_ins: ::std::os::raw::c_int,
    pub pen_unpaired: ::std::os::raw::c_int,
    pub pen_clip5: ::std::os::raw::c_int,
    pub pen_clip3: ::std::os::raw::c_int,
    pub w: ::std::os::raw::c_int,
    pub zdrop: ::std::os::raw::c_int,
    pub max_mem_intv: u64,
    pub T: ::std::os::raw::c_int,
    pub flag: ::std::os::raw::c_int,
    pub min_seed_len: ::std::os::raw::c_int,
    pub min_chain_weight: ::std::os::raw::c_int,
    pub max_chain_extend: ::std::os::raw::c_int,
    pub split_factor: f32,
    pub split_width: ::std::os::raw::c_int,
    pub max_occ: ::std::os::raw::c_int,
    pub max_chain_gap: ::std::os::raw::c_int,
    pub n_threads: ::std::os::raw::c_int,
    pub chunk_size: ::std::os::raw::c_int,
    pub mask_level: f32,
    pub drop_ratio: f32,
    pub XA_drop_ratio: f32,
    pub mask_level_redun: f32,
    pub mapQ_coef_len: f32,
    pub mapQ_coef_fac: ::std::os::raw::c_int,
    pub max_ins: ::std::os::raw::c_int,
    pub max_matesw: ::std::os::raw::c_int,
    pub max_XA_hits: ::std::os::raw::c_int,
    pub max_XA_hits_alt: ::std::os::raw::c_int,
    pub mat: [i8; 25usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mem_opt_t"][::std::mem::size_of::<mem_opt_t>() - 168usize];
    ["Alignment of mem_opt_t"][::std::mem::align_of::<mem_opt_t>() - 8usize];
    ["Offset of field: mem_opt_t::a"][::std::mem::offset_of!(mem_opt_t, a) - 0usize];
    ["Offset of field: mem_opt_t::b"][::std::mem::offset_of!(mem_opt_t, b) - 4usize];
    ["Offset of field: mem_opt_t::o_del"][::std::mem::offset_of!(mem_opt_t, o_del) - 8usize];
    ["Offset of field: mem_opt_t::e_del"][::std::mem::offset_of!(mem_opt_t, e_del) - 12usize];
    ["Offset of field: mem_opt_t::o_ins"][::std::mem::offset_of!(mem_opt_t, o_ins) - 16usize];
    ["Offset of field: mem_opt_t::e_ins"][::std::mem::offset_of!(mem_opt_t, e_ins) - 20usize];
    ["Offset of field: mem_opt_t::pen_unpaired"]
        [::std::mem::offset_of!(mem_opt_t, pen_unpaired) - 24usize];
    ["Offset of field: mem_opt_t::pen_clip5"]
        [::std::mem::offset_of!(mem_opt_t, pen_clip5) - 28usize];
    ["Offset of field: mem_opt_t::pen_clip3"]
        [::std::mem::offset_of!(mem_opt_t, pen_clip3) - 32usize];
    ["Offset of field: mem_opt_t::w"][::std::mem::offset_of!(mem_opt_t, w) - 36usize];
    ["Offset of field: mem_opt_t::zdrop"][::std::mem::offset_of!(mem_opt_t, zdrop) - 40usize];
    ["Offset of field: mem_opt_t::max_mem_intv"]
        [::std::mem::offset_of!(mem_opt_t, max_mem_intv) - 48usize];
    ["Offset of field: mem_opt_t::T"][::std::mem::offset_of!(mem_opt_t, T) - 56usize];
    ["Offset of field: mem_opt_t::flag"][::std::mem::offset_of!(mem_opt_t, flag) - 60usize];
    ["Offset of field: mem_opt_t::min_seed_len"]
        [::std::mem::offset_of!(mem_opt_t, min_seed_len) - 64usize];
    ["Offset of field: mem_opt_t::min_chain_weight"]
        [::std::mem::offset_of!(mem_opt_t, min_chain_weight) - 68usize];
    ["Offset of field: mem_opt_t::max_chain_extend"]
        [::std::mem::offset_of!(mem_opt_t, max_chain_extend) - 72usize];
    ["Offset of field: mem_opt_t::split_factor"]
        [::std::mem::offset_of!(mem_opt_t, split_factor) - 76usize];
    ["Offset of field: mem_opt_t::split_width"]
        [::std::mem::offset_of!(mem_opt_t, split_width) - 80usize];
    ["Offset of field: mem_opt_t::max_occ"][::std::mem::offset_of!(mem_opt_t, max_occ) - 84usize];
    ["Offset of field: mem_opt_t::max_chain_gap"]
        [::std::mem::offset_of!(mem_opt_t, max_chain_gap) - 88usize];
    ["Offset of field: mem_opt_t::n_threads"]
        [::std::mem::offset_of!(mem_opt_t, n_threads) - 92usize];
    ["Offset of field: mem_opt_t::chunk_size"]
        [::std::mem::offset_of!(mem_opt_t, chunk_size) - 96usize];
    ["Offset of field: mem_opt_t::mask_level"]
        [::std::mem::offset_of!(mem_opt_t, mask_level) - 100usize];
    ["Offset of field: mem_opt_t::drop_ratio"]
        [::std::mem::offset_of!(mem_opt_t, drop_ratio) - 104usize];
    ["Offset of field: mem_opt_t::XA_drop_ratio"]
        [::std::mem::offset_of!(mem_opt_t, XA_drop_ratio) - 108usize];
    ["Offset of field: mem_opt_t::mask_level_redun"]
        [::std::mem::offset_of!(mem_opt_t, mask_level_redun) - 112usize];
    ["Offset of field: mem_opt_t::mapQ_coef_len"]
        [::std::mem::offset_of!(mem_opt_t, mapQ_coef_len) - 116usize];
    ["Offset of field: mem_opt_t::mapQ_coef_fac"]
        [::std::mem::offset_of!(mem_opt_t, mapQ_coef_fac) - 120usize];
    ["Offset of field: mem_opt_t::max_ins"][::std::mem::offset_of!(mem_opt_t, max_ins) - 124usize];
    ["Offset of field: mem_opt_t::max_matesw"]
        [::std::mem::offset_of!(mem_opt_t, max_matesw) - 128usize];
    ["Offset of field: mem_opt_t::max_XA_hits"]
        [::std::mem::offset_of!(mem_opt_t, max_XA_hits) - 132usize];
    ["Offset of field: mem_opt_t::max_XA_hits_alt"]
        [::std::mem::offset_of!(mem_opt_t, max_XA_hits_alt) - 136usize];
    ["Offset of field: mem_opt_t::mat"][::std::mem::offset_of!(mem_opt_t, mat) - 140usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mem_pestat_t {
    pub low: ::std::os::raw::c_int,
    pub high: ::std::os::raw::c_int,
    pub failed: ::std::os::raw::c_int,
    pub avg: f64,
    pub std: f64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mem_pestat_t"][::std::mem::size_of::<mem_pestat_t>() - 32usize];
    ["Alignment of mem_pestat_t"][::std::mem::align_of::<mem_pestat_t>() - 8usize];
    ["Offset of field: mem_pestat_t::low"][::std::mem::offset_of!(mem_pestat_t, low) - 0usize];
    ["Offset of field: mem_pestat_t::high"][::std::mem::offset_of!(mem_pestat_t, high) - 4usize];
    ["Offset of field: mem_pestat_t::failed"]
        [::std::mem::offset_of!(mem_pestat_t, failed) - 8usize];
    ["Offset of field: mem_pestat_t::avg"][::std::mem::offset_of!(mem_pestat_t, avg) - 16usize];
    ["Offset of field: mem_pestat_t::std"][::std::mem::offset_of!(mem_pestat_t, std) - 24usize];
};
extern "C" {
    pub fn mem_opt_init() -> *mut mem_opt_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct smem_aux_t {
    pub mem: bwtintv_v,
    pub mem1: bwtintv_v,
    pub tmpv: [*mut bwtintv_v; 2usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of smem_aux_t"][::std::mem::size_of::<smem_aux_t>() - 64usize];
    ["Alignment of smem_aux_t"][::std::mem::align_of::<smem_aux_t>() - 8usize];
    ["Offset of field: smem_aux_t::mem"][::std::mem::offset_of!(smem_aux_t, mem) - 0usize];
    ["Offset of field: smem_aux_t::mem1"][::std::mem::offset_of!(smem_aux_t, mem1) - 24usize];
    ["Offset of field: smem_aux_t::tmpv"][::std::mem::offset_of!(smem_aux_t, tmpv) - 48usize];
};
extern "C" {
    pub fn bwa_smem_aux_init() -> *mut smem_aux_t;
}
extern "C" {
    pub fn bwa_smem_aux_destroy(a: *mut smem_aux_t);
}
extern "C" {
    pub fn mem_align(
        opt: *const mem_opt_t,
        idx: *const bwaidx_t,
        seq_name: *const ::std::os::raw::c_char,
        seq_seq: *const ::std::os::raw::c_char,
        seq_qual: *const ::std::os::raw::c_char,
        l_seq: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
